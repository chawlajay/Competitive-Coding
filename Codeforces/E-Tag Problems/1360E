/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author jignesh1604
 * Link : https://codeforces.com/contest/1360/problem/E
 */

#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")

#include <bits/stdc++.h>

using namespace std;

class EPolygon {
public:
	void solve(std::istream& in, std::ostream& out) {
	    int t;
	    in >> t;
	    while(t-- > 0) {
	        int n , i , j;
	        in >> n;
	        string s[n+1];
	        for(i = 0 ; i < n ; i++) {
	            in >> s[i];
	        }
	        int flag = 0;
	        for(i = 0 ; i < n-1 ; i++) {
	            for(j = 0 ; j < n-1 ; j++) {
	                if(s[i][j] == '1') {
	                    if(s[i+1][j] == '0' && s[i][j+1] == '0') {
	                        flag = 1;
	                    }
	                }
	            }
	        }
	        if(flag == 0) out << "YES\n";
	        else out << "NO\n";
	    }

	}
};


int main() {
	EPolygon solver;
	std::ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
