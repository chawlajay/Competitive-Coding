/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author jignesh1604
 * Link : https://codeforces.com/contest/522/problem/A
 */

#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")

#include <bits/stdc++.h>

using namespace std;

class AReposts {
public:
	void solve(std::istream& in, std::ostream& out) {
	    map<string , long long int> mp;
	    long long int n , i , j;
	    string s1 , s , s2;
	    in >> n;
	    mp["polycarp"] = 1;
	    for(i = 0 ; i < n ; i++) {
	        in >> s1 >> s >> s2;
	        for(j = 0 ; j < s1.size() ; j++) {
	            if(s1[j] >= 'A' && s1[j] <= 'Z') {
	                s1[j] = (char)(s1[j] + 32);
	            }
	        }
            for(j = 0 ; j < s2.size() ; j++) {
                if(s2[j] >= 'A' && s2[j] <= 'Z') {
                    s2[j] = (char)(s2[j] + 32);
                }
            }
	        mp[s1] = mp[s2] + 1;
	    }
        long long int ans = 1;
	    for(auto x : mp) {
	        ans = max(ans , x.second);
	    }
	    out << ans << "\n";
	}
};


int main() {
	AReposts solver;
	std::ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
