/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author jignesh1604
* Link :https://codeforces.com/contest/753/problem/A
 */

#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")

#include <bits/stdc++.h>

using namespace std;

class ASantaClausAndCandies {
public:
	void solve(std::istream& in, std::ostream& out) {
	    long long int n , i;
	    in >> n;
	    vector<long long int> dp(101);
	    map<long long int , long long int> mp;
	    for(i = 1 ; i < 101 ; i++) {
	        dp[i] = i*(i+1)/2;
	        mp[dp[i]] = i;
	    }
        long long int x = *upper_bound(dp.begin() , dp.end() , n);
	    long long int ind = mp[x] - 1;
	    out << ind << "\n";
	    for(i = 1 ; i < ind ; i++) {
	        out << i << " ";
	    }
	    out << ind + n - dp[ind] << " ";
	}
};


int main() {
	ASantaClausAndCandies solver;
	std::ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
