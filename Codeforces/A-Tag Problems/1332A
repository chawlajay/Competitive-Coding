/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author jignesh1604
 * Link : https://codeforces.com/contest/1332/problem/A
 */

#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")

#include <bits/stdc++.h>

using namespace std;

class AExercisingWalk {
public:
	void solve(std::istream& in, std::ostream& out) {
	    long long int t ;
	    in >> t ;
	    while(--t >= 0) {
	        long long int a , b , c , d ,x , y , x1 , x2 , y1 , y2 ;
	        in >> a >> b >> c >> d >> x >> y >> x1 >> y1 >> x2 >> y2 ;
	        if((a > 0 || b > 0) && ((x2 - x1) == 0)) {
	            out << "NO\n" ;
                continue ;
	        }
            if((c > 0 || d > 0) && ((y2 - y1) == 0)) {
                out << "NO\n" ;
                continue ;
            }
            if((x - (a - b)) < x1) {
                out << "NO\n" ;
                continue ;
            }
            if((x + (b - a)) > x2) {
                out << "NO\n" ;
                continue ;
            }
            if((y - (c - d)) < y1) {
                out << "NO\n" ;
                continue ;
            }
            if((y + (d - c)) > y2) {
                out << "NO\n" ;
                continue ;
            }
            out << "YES\n" ;
	    }
	}
};


int main() {
	AExercisingWalk solver;
	std::ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
