/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author jignesh1604
 * Link : https://codeforces.com/contest/584/problem/D
 */

#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")

#include <bits/stdc++.h>

using namespace std;

class DDimaAndLisa {
public:
    bool isprime(long long int n) {
        for(long long int i = 2 ; i <= sqrt(n) ; i++) {
            if(n%i == 0) {
                return false ;
            }
        }
        return true ;
    }
	void solve(std::istream& in, std::ostream& out) {
	    long long int n , i , j ;
	    in >> n ;
        if(isprime(n)) {
            out << 1 << "\n" << n << "\n" ;
        }
        else if(isprime(n-2)) {
            out << 2 << "\n" << n - 2 << " " << 2 << "\n" ;
        }
        else if(isprime(n-4)) {
            out << 3 << "\n" << n - 4 << " 2 2\n" ;
        }
        else {
            for(i = 2 ; i <= 500 ; i++) {
                if(isprime(n - i)) {
                    for(j = 2 ; j <= i ; j++) {
                        if(isprime(i-j) && isprime(j)) {
                            out << 3 << "\n" << n-i << " " << i - j << " " << j << "\n" ;
                            return ;
                        }
                    }
                }
            }
        }
	}
};


int main() {
	DDimaAndLisa solver;
	std::ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
