/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author jignesh1604
 * Link : https://codeforces.com/contest/888/problem/D
 */

#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")

#include <bits/stdc++.h>

using namespace std;

class DAlmostIdentityPermutations {
public:
	void solve(std::istream& in, std::ostream& out) {
	    long long int n , i , j , k , ans = 1 , x;
	    in >> n >> k;
	    if(k >= 2) {
	        ans += n*(n-1)/2;
	    }
	    if(k >= 3) {
	        ans += (n*(n-1)*(n-2)/6)*2;
	    }
	    if(k >= 4) {
	        ans += (n*(n-1)*(n-2)*(n-3)/24)*9;
	    }
        out << ans << "\n";
	}
};


int main() {
	DAlmostIdentityPermutations solver;
	std::ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
