/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author jignesh1604
 * Link : https://codeforces.com/problemset/problem/1315/B
 */

#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")

#include <bits/stdc++.h>

using namespace std;

class BHomecoming {
public:
	void solve(std::istream& in, std::ostream& out) {
	    long long int t;
	    in >> t;
	    while(t-- > 0) {
	        long long int a , b , p , i , flag = 0;
	        string s;
	        in >> a >> b >> p >> s;
	        vector<pair<long long int , long long int>> v;
	        if(s[0] == 'A') {
	            v.push_back({a , 0});
	        }
	        else {
	            v.push_back({b , 0});
	        }
	        for(i = 0 ; i < s.size() - 2 ; i++) {
	            if(s[i] != s[i+1]) {
	                if(s[i+1] == 'B') {
	                    v.push_back({b , i+1});
	                }
	                else {
	                    v.push_back({a , i+1});
	                }
	            }
	        }
	        long long int ans = 0;
	        for(i = v.size() - 1 ; i >= 0 ; i--) {
	            ans += v[i].first;
	            if(ans > p) {
	                if(i == v.size() - 1) {
	                    out << s.size() << "\n";
//	                    out << s<< "\n";
	                }
	                else {
                        out << v[i + 1].second + 1 << "\n";
//                        out << s<< "\n";
                    }
	                flag = 1;
	                break;

	            }
	        }
	        if(flag == 0) {
	            out << v[0].second + 1<< "\n";
	        }
	    }

	}
};


int main() {
	BHomecoming solver;
	std::ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
