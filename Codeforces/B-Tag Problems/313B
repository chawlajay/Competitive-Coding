/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author jignesh1604
 * Link : https://codeforces.com/contest/313/problem/B
 */

#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")

#include <bits/stdc++.h>

using namespace std;

class BIlyaAndQueries {
public:
	void solve(std::istream& in, std::ostream& out) {
	    string s;
	    in >> s;
	    long long int n , i , j , q , l , r , pre[s.size() + 1];
	    for(i = 0 ; i < s.size() - 1 ; i++) {
	        if(s[i] == s[i+1]) {
	            pre[i] = 1;
	        }
	        else {
	            pre[i] = 0;
	        }
	    }
	    pre[s.size() - 1] = 0;
	    for(i = 1 ; i < s.size() ; i++) {
	        pre[i] = pre[i] + pre[i-1];
	    }
	    in >> q;
	    while(q-- > 0) {
	        in >> l >> r;
	        r--;
	        l--;
	        if(l == 0) {
	            out << pre[r-1] << "\n";
	        }
	        else {
	            out << pre[r-1] - pre[l-1] << "\n";
	        }
	    }

	}
};


int main() {
	BIlyaAndQueries solver;
	std::ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
