/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author jignesh1604
 * Link : https://codeforces.com/contest/1042/problem/B
 */

#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")

#include <bits/stdc++.h>

using namespace std;

class BVitamins {
public:
	void solve(std::istream& in, std::ostream& out) {
	    long long int n , i , j , x , ans = LLONG_MAX , a = 0 , b = 0 , c = 0;
	    string s;
	    in >> n;
	    map<string , long long int> mp;
	    for(i = 0 ; i < n ; i++) {
	        in >> x >> s;
	        for(j = 0 ; j < s.size() ; j++) {
	            if(s[j] == 'A') a++;
	            else if(s[j] == 'B') b++;
	            else c++;
	        }
	        sort(s.begin() , s.end());
	        if(mp[s] == 0) {
	            mp[s] = x;
	        }
	        else {
	            mp[s] = min(mp[s] , x);
	        }
	    }
        if(a == 0 || b == 0 || c == 0) {
            out << -1 << "\n";
        }
        else {
            if(mp["A"] != 0 && mp["B"] != 0 && mp["C"] != 0) {
                ans = min(ans , mp["A"] + mp["B"] + mp["C"]);
            }
            if(mp["A"] != 0 && mp["BC"] != 0) {
                ans = min(ans , mp["A"] + mp["BC"]);
            }
            if(mp["B"] != 0 && mp["AC"] != 0) {
                ans = min(ans , mp["B"] + mp["AC"]);
            }
            if(mp["C"] != 0 && mp["AB"] != 0) {
                ans = min(ans , mp["C"] + mp["AB"]);
            }
            if(mp["AB"] != 0 && mp["BC"] != 0) {
                ans = min(ans , mp["AB"] + mp["BC"]);
            }
            if(mp["AB"] != 0 && mp["AC"] != 0) {
                ans = min(ans , mp["AB"] + mp["AC"]);
            }
            if(mp["AC"] != 0 && mp["BC"] != 0) {
                ans = min(ans , mp["AC"] + mp["BC"]);
            }
            if(mp["ABC"] != 0) {
                ans = min(ans , mp["ABC"]);
            }
            out << ans << "\n";
        }
	}
};


int main() {
	BVitamins solver;
	std::ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
