/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author jignesh1604
 * Link  :    https://codeforces.com/contest/610/problem/B
 */

#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")

#include <bits/stdc++.h>

using namespace std;

class BVikaAndSquares {
public:
	void solve(std::istream& in, std::ostream& out) {
        long long int n, i, j, minindex = -1 , minindex2 = -1, min = LLONG_MAX;
        in >> n;
        long long int a[n + 1];
        for (i = 0; i < n; i++) {
            in >> a[i] ;
            if(a[i] <= min) {
                min = a[i] ;
            }
        }
        vector<long long int> v ;
        for(i = 0 ; i < n ; i++) {
            if(a[i] == min) {
                v.push_back(i) ;
            }
        }
        long long int ans = 0 ;
        for(i = 0 ; i < v.size() - 1 ; i++) {
            ans = max(ans , v[i+1] - v[i] - 1) ;
        }
        ans = max(ans , n - v[v.size() - 1] - 1 + v[0]) ;
        out << min*n + ans << "\n" ;
    }
};


int main() {
	BVikaAndSquares solver;
	std::ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
