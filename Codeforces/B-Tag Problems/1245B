/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author jignesh1604
* Link  : https://codeforces.com/contest/1245/problem/B
 */

#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")

#include <bits/stdc++.h>

using namespace std;

class BRestrictedRPS {
public:
	void solve(std::istream& in, std::ostream& out) {
	    int t;
	    in >> t;
	    while(t-- > 0) {
	        long long int n , a , b , c , i;
	        in >> n >> a >> b >> c;
	        string s , d = "";
	        in >> s;
	        for(i = 0 ; i < n ; i++) {
	            if(s[i] == 'R' && b > 0) {
	                d += 'P';
	                b--;
	            }
	            else if(s[i] == 'P' && c > 0) {
	                d += 'S';
	                c--;
	            }
	            else if(s[i] == 'S' && a > 0) {
	                d += 'R';
	                a--;
	            }
	            else {
	                d += '1';
	            }
	        }
	        for(i = 0 ; i < n ; i++) {
	            if(s[i] == 'R' && d[i] == '1') {
	                if(a > 0) {
	                    d[i] = 'R';
	                    a--;
	                }
	                else {
	                    d[i] = 'S';
	                    c--;
	                }
	            }
	            else if(s[i] == 'P' && d[i] == '1') {
                    if(b > 0) {
                        d[i] = 'P';
                        b--;
                    }
                    else {
                        d[i] = 'R';
                        a--;
                    }
                }
	            else if(s[i] == 'S' && d[i] == '1') {
                    if(c > 0) {
                        d[i] = 'S';
                        c--;
                    }
                    else {
                        d[i] = 'P';
                        b--;
                    }
                }
	        }
	        long long int p = 0 , q = 0;
	        for(i = 0 ; i < n ; i++) {
	            if(s[i] == 'R' && d[i] == 'S') {
	                p++;
	            }
                if(s[i] == 'S' && d[i] == 'R') {
                    q++;
                }
                if(s[i] == 'P' && d[i] == 'R') {
                    p++;
                }
                if(s[i] == 'R' && d[i] == 'P') {
                    q++;
                }
                if(s[i] == 'S' && d[i] == 'P') {
                    p++;
                }
                if(s[i] == 'P' && d[i] == 'S') {
                    q++;
                }
	        }
	        if(n%2 == 0) {
	            n = n/2;
	        }
	        else {
	            n = n/2 + 1;
	        }
	        if(q >= n) {
	            out << "YES\n";
	            out << d << "\n";
	        }
	        else {
	            out << "NO\n";
	        }
	    }

	}
};


int main() {
	BRestrictedRPS solver;
	std::ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
