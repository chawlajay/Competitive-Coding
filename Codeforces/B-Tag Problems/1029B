/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author jignesh1604
 * Link : https://codeforces.com/contest/1029/problem/B
 */

#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")

#include <bits/stdc++.h>

using namespace std;

class BCreatingTheContest {
public:
	void solve(std::istream& in, std::ostream& out) {
        long long int n , i;
        in >> n;
        long long int a[n+1];
        for(i = 0 ; i < n ; i++) {
            in >> a[i];
        }
        long long int dp[n+1] , ans = 1 , c = 1;
        dp[0] = 0;
        for(i = 1 ; i < n ; i++) {
            if(a[i] <= 2*a[i-1]) {
                dp[i] = dp[i-1];
            }
            else {
                dp[i] = 1 - dp[i-1];
            }
        }
        for(i = 1 ; i < n ; i++) {
            if(dp[i] == dp[i-1]) {
                c++;
            }
            else {
                ans = max(ans , c);
                c = 1;
            }
        }
        ans = max(c , ans);
        out << ans << "\n";
	}
};


int main() {
	BCreatingTheContest solver;
	std::ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
