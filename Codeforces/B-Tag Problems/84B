/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author jignesh1604
 * Link : https://codeforces.com/contest/84/problem/B
 */

#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")

#include <bits/stdc++.h>

using namespace std;

class BMagicalArray {
public:
	void solve(std::istream& in, std::ostream& out) {
	    long long int n , i , j , c = 1 , ans = 0;
	    in >> n;
	    ans += n;
	    long long int a[n+1];
	    for(i = 0 ; i < n ; i++) {
	        in >> a[i];
	    }
        for(i = 1 ; i < n ; i++) {
            if(a[i] == a[i-1]) {
                c++;
            }
            else {
                ans += c*(c-1)/2;
                c = 1;
            }
        }
        ans += c*(c-1)/2;
        out << ans << "\n";
	}
};


int main() {
	BMagicalArray solver;
	std::ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
