/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author jignesh1604
 * Link : https://codeforces.com/contest/1015/problem/B
 */

#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")

#include <bits/stdc++.h>

using namespace std;

class BObtainingTheString {
public:
	void solve(std::istream& in, std::ostream& out) {
	    long long int n , i , j , k;
	    in >> n;
	    string s , t , a , b;
	    in >> s >> t;
	    a = s;
	    b = t;
	    sort(a.begin() , a.end());
	    sort(b.begin() , b.end());
	    if(a != b) {
	        out << -1 << "\n";
	    }
	    else {
	        vector<long long int> v;
	        for(i = 0 ; i < n ; i++) {
	            if(t[i] != s[i]) {
	                for(j = i ; j < n-1 ; j++) {
	                    if(s[j+1] == t[i]) {
	                        for(k = j ; k >= i ; k--) {
	                            swap(s[k+1] , s[k]);
	                            v.push_back(k);
	                        }
	                        break;
	                    }
	                }
	            }
	        }
	        out << v.size() << "\n";
	        for(i = 0 ; i < v.size() ; i++) {
	            out << v[i] + 1 << " ";
	        }
	    }

	}
};


int main() {
	BObtainingTheString solver;
	std::ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
