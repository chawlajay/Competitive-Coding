/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author jignesh1604
 * Link : https://codeforces.com/contest/1348/problem/B
 */

#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")

#include <bits/stdc++.h>

using namespace std;

class BPhoenixAndBeauty {
public:
	void solve(std::istream& in, std::ostream& out) {
	    int t;
	    in >> t;
	    while(t-- > 0) {
	        int n , k , i , j;
	        in >> n >> k;
	        int a[n+1];
	        set<int> st;
	        for(i = 0 ; i < n ; i++) {
	            in >> a[i];
	            st.insert(a[i]);
	        }
	        if(st.size() > k) {
	            out << -1 << "\n";
	        }
	        else {
	            for(i =1 ; i <= n ; i++) {
	                if(st.size() < k) {
	                    st.insert(i);
	                }
	            }
	            out << n*k<< "\n";
	            for(i = 0 ; i < n ; i++) {
	                for(auto x : st) {
	                    out << x << " ";
	                }
	            }
	            out << "\n";
	        }
	    }

	}
};


int main() {
	BPhoenixAndBeauty solver;
	std::ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
