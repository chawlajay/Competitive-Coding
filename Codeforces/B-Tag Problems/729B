/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author jignesh1604
* Link :https://codeforces.com/contest/729/problem/B
 */

#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")

#include <bits/stdc++.h>

using namespace std;

class BSpotlights {
public:
	void solve(std::istream& in, std::ostream& out) {
	    long long int n , m , i , j , ans = 0;
	    in >> n >> m;
	    long long int a[n+1][m+1];
	    for(i = 1 ; i <= n ; i++) {
	        for(j = 1 ; j <= m ; j++) {
	            in >> a[i][j];
	        }
	    }
	    for(i = 1 ; i <= n ; i++) {
	        int flag = 0;
	        for(j = m ; j >= 1 ; j--) {
	            if(a[i][j] == 0) {
	                if(flag == 1) {
	                    ans++;
	                }
	            }
	            else {
	                flag = 1;
	            }
	        }
	    }
        for(i = 1 ; i <= n ; i++) {
            int flag = 0;
            for(j = 1 ; j <= m ; j++) {
                if(a[i][j] == 0) {
                    if(flag == 1) {
                        ans++;
                    }
                }
                else {
                    flag = 1;
                }
            }
        }
        for(i = 1 ; i <= m ; i++) {
            int flag = 0;
            for(j = n ; j >= 1 ; j--) {
                if(a[j][i] == 0) {
                    if(flag == 1) {
                        ans++;
                    }
                }
                else {
                    flag = 1;
                }
            }
        }
        for(i = 1 ; i <= m ; i++) {
            int flag = 0;
            for(j = 1 ; j <= n ; j++) {
                if(a[j][i] == 0) {
                    if(flag == 1) {
                        ans++;
                    }
                }
                else {
                    flag = 1;
                }
            }
        }
        out << ans << "\n";
	}
};


int main() {
	BSpotlights solver;
	std::ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
