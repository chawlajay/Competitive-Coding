/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author jignesh1604
 * Link : https://codeforces.com/contest/534/problem/C
 */

#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")

#include <bits/stdc++.h>

using namespace std;

class CPolycarpusDice {
public:
	void solve(std::istream& in, std::ostream& out) {
        long long int n , a , sum = 0 , i , j ;
        in >> n >> a ;
        long long int d[n+1] ;
        for(i = 0 ; i < n ; i++) {
            in >> d[i] ;
            sum += d[i] ;
        }
        for(i = 0; i < n ; i++) {
            long long int ans = 0 ;
            if(d[i] + (n - 1) > a) {
                ans += d[i] + (n - 1) - a;
            }
            if(a - sum + d[i] - 1 > 0) {
                ans += a - sum + d[i] - 1 ;
            }
            out << ans << " " ;
        }
	}
};


int main() {
	CPolycarpusDice solver;
	std::ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
