/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author jignesh1604
 * Link : https://codeforces.com/contest/1288/problem/C
 */

#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")

#include <bits/stdc++.h>

using namespace std;
long long int dp[11][1001];
class CTwoArrays {
public:
    const long long int M = 1e9 + 7;
    long long int fun(long long int n , long long int m) {
        if(m <= 0) {
            return 0;
        }
        if(n <= 0) {
            return 1;
        }
        if(dp[n][m] != -1) {
            return dp[n][m];
        }
        long long int sum = 0;
        for(long long int i = 1 ; i <= m ; i++) {
            sum = (sum%M + ((m-i+1)*fun(n-1 , i))%M)%M;
        }
        dp[n][m] = sum%M;
        return dp[n][m];
    }
	void solve(std::istream& in, std::ostream& out) {
	    long long int  n , m;
	    in >> m >> n;
	    for(long long int i = 0 ; i < 11 ; i++) {
	        for(long long int j = 0 ; j < 1001 ; j++) {
	            dp[i][j] = -1;
	        }
	    }
        out << fun(n , m) << "\n";
	}
};


int main() {
	CTwoArrays solver;
	std::ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
