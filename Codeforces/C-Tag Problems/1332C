/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author jignesh1604
 * Link : https://codeforces.com/contest/1332/problem/C
 */

#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")

#include <bits/stdc++.h>

using namespace std;

class CKCompleteWord {
public:
	void solve(std::istream& in, std::ostream& out) {
	    long long int t ;
	    in >> t ;
	    while(t--) {
	        long long int n , k , i ,j ;
	        in >> n >> k ;
	        string s ;
	        in >> s ;
	        long long int a[26] = {} , ans = 0 , c = 0;
	        for(i = 0 ; i < (k+1) / 2 ; i++) {
	            for(j = i ; j < n ; j += k) {
	                a[s[j] - 97]++ ;
	            }
	            if(i != (k-i-1)) {
                    for (j = k - i - 1; j < n; j += k) {
                        a[s[j] - 97]++;
                    }
                }
	            if(i != (k-i-1)) {
                    for (j = 0; j < 26; j++) {
                        c = max(c, a[j]);
                    }
                    ans += 2 * (n / k) - c;
                }
	            if(i == (k-i-1)) {
	                c = 0 ;
	                for(j = 0 ; j < 26 ; j++) {
	                    c = max(c , a[j]) ;
	                }
	                ans += (n/k) - c ;
	            }
	            for(j = 0 ; j < 26 ; j++) {
	                a[j] = 0 ;
	            }
	            c = 0;
	        }
	        out << ans << "\n" ;
	    }

	}
};


int main() {
	CKCompleteWord solver;
	std::ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
