/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author jignesh1604
 * Link : https://codeforces.com/contest/499/problem/C
 */

#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")

#include <bits/stdc++.h>

using namespace std;

class CCrazyTown {
public:
	void solve(std::istream& in, std::ostream& out) {
	    long double x1 , y1 , x2 , y2 , i , j , a1 , b1 , c1 , a2 , b2 , c2 , n , ans = 0 , x , y  ;
	    in >> x1 >> y1 >> x2 >> y2 ;
	    a1 = (y2 - y1) ;
	    b1 = (x1 - x2) ;
	    c1 = x2*y1 - x1*y2 ;
	    in >> n ;
	    while(--n >= 0) {
	        in >> a2 >> b2 >> c2 ;
	        long double determinant = a1*b2 - a2*b1 ;
	        if(determinant != 0) {
	            x = c2 * b1 - c1 * b2 ;
	            y = a2 * c1 - a1 * c2 ;
	            if((min(x1 , x2) <= (x/determinant) && (x/determinant) <= max(x1 , x2)) && (min(y1 , y2) <= (y/determinant) && (y/determinant) <= max(y1 , y2))) {
	                ans++ ;
	            }
	        }
 	    }
	    out << ans << "\n" ;

	}
};


int main() {
	CCrazyTown solver;
	std::ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
