/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author jignesh1604
 * Link : https://codeforces.com/contest/1351/problem/C
 */

#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")

#include <bits/stdc++.h>

using namespace std;

class CSkier {
public:
	void solve(std::istream& in, std::ostream& out) {
	    int t;
	    in >> t;
	    while(t-- > 0) {
	        string s;
	        in >> s;
	        long long int i , ans = 0 , x = 0 , y = 0 , x1 , y1;
	        map<pair<pair<long long int , long long int> , pair<long long int , long long int>> , long long int> mp;
	        for(i = 0 ; i < s.size() ; i++) {
	            x1 = x;
	            y1 = y;
	            if(s[i] == 'N') {
	                x++;
	            }
	            else if(s[i] == 'S') {
	                x--;
	            }
	            else if(s[i] == 'E') {
	                y++;
	            }
	            else {
	                y--;
	            }
                    if (mp[{{x1 , y1} , {x, y}}] == 0 && mp[{{x , y} , {x1 , y1}}] == 0) {
                        ans += 5;
                    } else {
                        ans += 1;
                    }
                    mp[{{x1, y1} , {x,  y}}] = 1;
                    mp[{{x , y} , {x1 , y1}}] = 1;

	        }
	        out << ans << "\n";
	    }

	}
};


int main() {
	CSkier solver;
	std::ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
