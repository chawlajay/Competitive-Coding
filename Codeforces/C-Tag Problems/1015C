/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author jignesh1604
 * Link : https://codeforces.com/contest/1015/problem/C
 */

#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")

#include <bits/stdc++.h>

using namespace std;

class CSongsCompression {
public:
	void solve(std::istream& in, std::ostream& out) {
	    long long int n , m , i , j , x , y , sum = 0 , ans = 0;
	    in >> n >> m;
        vector<long long int> v;
        for(i = 0 ; i < n ; i++) {
            in >> x >> y;
            sum += x;
            v.push_back(x-y);
        }
        if(sum <= m) {
            out << 0 << "\n";
            return;
        }
        sort(v.begin() , v.end() , greater<>());
        for(i = 0 ; i < n ; i++) {
            sum -= v[i];
            ans++;
            if(sum <= m) {
                out << ans << "\n";
                return;
            }
        }
        out << -1 << "\n";
        return;
	}
};


int main() {
	CSongsCompression solver;
	std::ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
