/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author jignesh1604
 * Link : https://codeforces.com/contest/405/problem/C
 */

#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")

#include <bits/stdc++.h>

using namespace std;

class CUnusualProduct {
public:
	void solve(std::istream& in, std::ostream& out) {
	    long long int n , i , j , q ;
	    in >> n ;
	    long long int a[n+1][n+1] ;
	    for(i = 1 ; i <= n ; i++) {
	        for(j = 1 ; j <= n ; j++) {
	            in >> a[i][j] ;
	        }
	    }
	    in >> q ;
	    long long int ans = 0 ;
	    for(i = 1 ; i <= n ; i++) {
	        ans += a[i][i] ;
	    }
	    while(--q >= 0) {
	        long long int type , x ;
	        in >> type ;
	        if(type == 1 || type == 2) {
	            in >> x ;
	            if(a[x][x] == 0) {
	                ans++ ;
	            }
	            else {
	                ans-- ;
	            }
	            a[x][x] = (a[x][x]^1) ;
	        }
	        else {
	            out << ans % 2 ;
	        }
	    }

	}
};


int main() {
	CUnusualProduct solver;
	std::ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
