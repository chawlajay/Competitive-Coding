/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author jignesh1604
 * Link : https://codeforces.com/contest/1295/problem/C
 */

#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")

#include <bits/stdc++.h>

using namespace std;

class CObtainTheString {
public:
	void solve(std::istream& in, std::ostream& out) {
	    int t;
	    in >> t;
	    while(t-- > 0) {
	        string s , t;
	        in >> s >> t;
	        long long int i , j , k , c = -1 , ans = 0 , flag = 0;
	        vector<vector<long long int>> v(26);
	        for(i = 0 ; i < s.size() ; i++) {
	            v[s[i] - 97].push_back(i);
	        }
	        for(i = 0 ; i < t.size() ; i++) {
	            if(v[t[i]  - 97].size() == 0) {
	                out << -1 << "\n";
	                flag = 1;
	                break;
	            }
	        }
	        if(flag == 0) {
                for (i = 0; i < t.size(); i++) {
                    auto it = upper_bound(v[t[i] - 97].begin(), v[t[i] - 97].end(), c);
                    if (it == v[t[i] - 97].end()) {
                        ans++;
                        c = *upper_bound(v[t[i] - 97].begin(), v[t[i] - 97].end(), -1);
                    } else {
                        c = *it;
                    }
                }
                out << ans+1 << "\n";
            }
	    }

	}
};


int main() {
	CObtainTheString solver;
	std::ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
