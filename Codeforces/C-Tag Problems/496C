/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author jignesh1604
 * Link : https://codeforces.com/contest/496/problem/C
 */

#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")

#include <bits/stdc++.h>

using namespace std;

class CRemovingColumns {
public:
	void solve(std::istream& in, std::ostream& out) {
	    long long int n , m ,i , j , k , ans = 0 ;
	    in >> n >> m ;
	    string s[n+1] ;
	    long long int a[101] = {} ;
	    for(i = 0 ; i < n ; i++) {
	        in >> s[i] ;
	    }
	    for(k = 1 ; k <= 100 ; k++) {
            for (i = 1; i < n; i++) {
                int flag = 0;
                for (j = 0; j < m; j++) {
                    if (a[j] == 0) {
                        if (s[i][j] > s[i - 1][j]) {
                            break;
                        } else if (s[i][j] < s[i - 1][j]) {
                            a[j] = 1;
                            ans++;
                            break;
                        }
                    }
                }
            }
        }
        out << ans << "\n " ;
	}
};


int main() {
	CRemovingColumns solver;
	std::ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
