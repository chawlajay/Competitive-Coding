/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author jignesh1604
 * Link : https://www.hackerearth.com/practice/algorithms/searching/binary-search/practice-problems/algorithm/stones-love/
 */

#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")

#include <bits/stdc++.h>

using namespace std;

class StonesLove {
public:
	void solve(std::istream& in, std::ostream& out) {
	    long long int n , q , i , j , sum = 0;
	    in >> n >> q;
	    long long int a[n+1];
	    map<long long int , long long int> mp;
	    for(i = 0 ; i < n ; i++) {
	        in >> a[i];
	    }
	    set<long long int> st;
	    for(i = 0 ; i < n ; i++) {
	        sum += a[i];
	        mp[sum] = i+1;
	        st.insert(sum);
	    }
	    while(q-- > 0) {
	        long long int x;
	        in >> x;
	        out << mp[*st.lower_bound(x)] << "\n";
	    }
	}
};


int main() {
	StonesLove solver;
	std::ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
