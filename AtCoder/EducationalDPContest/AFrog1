/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author jignesh1604
 * Link : https://atcoder.jp/contests/dp/tasks/dp_a
 */

#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")

#include <bits/stdc++.h>

using namespace std;

class AFrog1 {
public:
	void solve(std::istream& in, std::ostream& out) {
	    long long int n , i;
	    in >> n;
	    vector<long long int> a(n+1) , dp(n+1 , 0);
	    for(i = 1 ; i <= n ; i++) {
            in >> a[i];
        }
	    dp[2] = abs(a[1] - a[2]);
	    for(i = 3 ; i <= n ; i++) {
	        dp[i] = min(dp[i-1] + abs(a[i] - a[i-1]) , dp[i-2] + abs(a[i] - a[i-2]));
	    }
	    out << dp[n] << "\n";
	}
};


int main() {
	AFrog1 solver;
	std::ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
